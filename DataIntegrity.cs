///
 /// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 ///

namespace Codat.DataIntegrity;
using System.Net.Http;
using Newtonsoft.Json;
using Codat.Models.Shared;
using Codat.Models.DataIntegrity;
using Codat.Utils;

public interface IDataIntegritySDK
{
    Task<GetDataIntegrityDetailsResponse> GetDataIntegrityDetailsAsync(GetDataIntegrityDetailsRequest request);
    Task<GetDataIntegrityStatusResponse> GetDataIntegrityStatusAsync(GetDataIntegrityStatusRequest request);
    Task<GetDataIntegritySummariesResponse> GetDataIntegritySummariesAsync(GetDataIntegritySummariesRequest request);
}

public class DataIntegritySDK: IDataIntegritySDK
{
    private const string language = "csharp";
    private const string sdkVersion = "0.0.1";
    private const string sdkGenVersion = "internal";
    public Uri ServerUrl { get { return _defaultClient.BaseAddress; } }
    private HttpClient _defaultClient;
    private HttpClient _securityClient;

    public DataIntegritySDK(HttpClient defaultClient, HttpClient securityClient)
    {
        _defaultClient = defaultClient;
        _securityClient = securityClient;
    }

    public async Task<GetDataIntegrityDetailsResponse> GetDataIntegrityDetailsAsync(GetDataIntegrityDetailsRequest request)
    {
        var message = request.BuildHttpRequestMessage("get-data-integrity-details");
        var httpResponseMessage = await _defaultClient.SendAsync(message);
        var response = new GetDataIntegrityDetailsResponse
        {
            StatusCode = (int)httpResponseMessage.StatusCode,
            ContentType = httpResponseMessage.Content.Headers.ContentType?.MediaType,
            RawResponse = httpResponseMessage
        };
        if((response.StatusCode == 200))
        {
            if("application/json" == response.ContentType)
            {
                response.Details = JsonConvert.DeserializeObject<Details>(await httpResponseMessage.Content.ReadAsStringAsync(), new FlexibleObjectDeserializer());
            }
            return response;
        }
        return response;
    }

    public async Task<GetDataIntegrityStatusResponse> GetDataIntegrityStatusAsync(GetDataIntegrityStatusRequest request)
    {
        var message = request.BuildHttpRequestMessage("get-data-integrity-status");
        var httpResponseMessage = await _defaultClient.SendAsync(message);
        var response = new GetDataIntegrityStatusResponse
        {
            StatusCode = (int)httpResponseMessage.StatusCode,
            ContentType = httpResponseMessage.Content.Headers.ContentType?.MediaType,
            RawResponse = httpResponseMessage
        };
        if((response.StatusCode == 200))
        {
            if("application/json" == response.ContentType)
            {
                response.Status = JsonConvert.DeserializeObject<Status>(await httpResponseMessage.Content.ReadAsStringAsync(), new FlexibleObjectDeserializer());
            }
            return response;
        }
        return response;
    }

    public async Task<GetDataIntegritySummariesResponse> GetDataIntegritySummariesAsync(GetDataIntegritySummariesRequest request)
    {
        var message = request.BuildHttpRequestMessage("get-data-integrity-summaries");
        var httpResponseMessage = await _defaultClient.SendAsync(message);
        var response = new GetDataIntegritySummariesResponse
        {
            StatusCode = (int)httpResponseMessage.StatusCode,
            ContentType = httpResponseMessage.Content.Headers.ContentType?.MediaType,
            RawResponse = httpResponseMessage
        };
        if((response.StatusCode == 200))
        {
            if("application/json" == response.ContentType)
            {
                response.Summaries = JsonConvert.DeserializeObject<Summaries>(await httpResponseMessage.Content.ReadAsStringAsync(), new FlexibleObjectDeserializer());
            }
            return response;
        }
        return response;
    }

    
}