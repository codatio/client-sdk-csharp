///
 /// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 ///

namespace Codat.Models.Categories;
using Codat.Utils;
using Codat.Models.Shared;
using Newtonsoft.Json;
using Newtonsoft.Json.Linq;
using System.Net;
using System.Net.Http;
using System.Text;

public class UpdateAccountCategoryRequest
{
    [JsonProperty("ConfirmCategory")]
    public ConfirmCategory? ConfirmCategory { get; set; }
    
    [JsonProperty("accountId")]
    public string AccountId { get; set; }
    
    [JsonProperty("companyId")]
    public string CompanyId { get; set; }
    
    [JsonProperty("connectionId")]
    public string ConnectionId { get; set; }
    
    internal HttpRequestMessage BuildHttpRequestMessage(string operationId)
    {
        if("update-account-category" == operationId)
        {
            // add path params
            
            
            var accountId = PathParamSerializer.Serialize("simple", false, this.AccountId);
            
            var companyId = PathParamSerializer.Serialize("simple", false, this.CompanyId);
            
            var connectionId = PathParamSerializer.Serialize("simple", false, this.ConnectionId);
            var message = new HttpRequestMessage(HttpMethod.Patch, $"/data/companies/{companyId}/connections/{connectionId}/assess/accounts/{accountId}/categories");
            

            string json = JsonConvert.SerializeObject(this.ConfirmCategory);
            message.Content = new StringContent(json, Encoding.UTF8, "application/json");
            return message;
        }
        throw new ArgumentException($"Attempt to build HttpRequestMessage for invalid operationId [{operationId}] for request type [UpdateAccountCategoryRequest]");
    }
}
