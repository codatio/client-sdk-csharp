///
 /// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 ///

namespace Codat.Models.DataIntegrity;
using Codat.Utils;
using Codat.Models.Shared;
using Newtonsoft.Json;
using Newtonsoft.Json.Linq;
using System.Net;
using System.Net.Http;
using System.Text;

public class GetDataIntegrityStatusRequest
{
    [JsonProperty("companyId")]
    public string CompanyId { get; set; }
    
    [JsonProperty("dataType")]
    public DataIntegrityDataTypeEnum DataType { get; set; }
    
    internal HttpRequestMessage BuildHttpRequestMessage(string operationId)
    {
        if("get-data-integrity-status" == operationId)
        {
            // add path params
            
            var companyId = PathParamSerializer.Serialize("simple", false, this.CompanyId);
            
            var dataType = PathParamSerializer.Serialize("simple", false, this.DataType);
            var message = new HttpRequestMessage(HttpMethod.Get, $"/data/companies/{companyId}/assess/dataTypes/{dataType}/dataIntegrity/status");
            return message;
        }
        throw new ArgumentException($"Attempt to build HttpRequestMessage for invalid operationId [{operationId}] for request type [GetDataIntegrityStatusRequest]");
    }
}
