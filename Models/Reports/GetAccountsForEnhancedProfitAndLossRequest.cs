
//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Codat.Models.Reports
{
    using Codat.Utils;
    using Codat.Models.Shared;
    using NodaTime;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Linq;
    using System;
    using System.Collections.Generic;
    using System.Net;
    using System.Net.Http;
    using System.Text;
    
public class GetAccountsForEnhancedProfitAndLossRequest
{
    [JsonProperty("companyId")]
    public string CompanyId { get; set; }
    
    [JsonProperty("numberOfPeriods")]
    public int NumberOfPeriods { get; set; }
    
    [JsonProperty("reportDate")]
    public string ReportDate { get; set; }
    
    internal static HttpRequestMessage BuildHttpRequestMessage(string operationId, GetAccountsForEnhancedProfitAndLossRequest value, string baseUrl)
    {
        if("get-accounts-for-enhanced-profit-and-loss" == operationId)
        {
            // serialize query parameters
            var queryParams = new List<string>();
            queryParams.Add(QueryParamSerializer.Serialize("simple",false, "companyId", "", value.CompanyId));
            queryParams.Add(QueryParamSerializer.Serialize("form",true, "numberOfPeriods", "", value.NumberOfPeriods));
            queryParams.Add(QueryParamSerializer.Serialize("form",true, "reportDate", "", value.ReportDate));

            var queryParamString = $"?{String.Join("&", queryParams)}";
            // add path params
            
            var companyId = PathParamSerializer.Serialize("simple", false, value.CompanyId);
            
            
            var message = new HttpRequestMessage(HttpMethod.Get, baseUrl + $"/companies/{companyId}/reports/enhancedProfitAndLoss/accounts" + queryParamString);
            return message;
        }
        throw new ArgumentException($"Attempt to build HttpRequestMessage for invalid operationId [{operationId}] for request type [GetAccountsForEnhancedProfitAndLossRequest]");
    }
}
}