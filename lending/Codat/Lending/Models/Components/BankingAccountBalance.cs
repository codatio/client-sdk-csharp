//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace Codat.Lending.Models.Components
{
    using Codat.Lending.Models.Components;
    using Codat.Lending.Utils;
    using Newtonsoft.Json;
    
    /// <summary>
    /// The Banking Account Balances data type provides a list of balances for a bank account including end-of-day batch balance or running balances per transaction.<br/>
    /// 
    /// <remarks>
    /// <br/>
    /// Responses are paged, so you should provide `page` and `pageSize` query parameters in your request.<br/>
    /// <br/>
    /// &gt; **How often should I pull Account Balances?**<br/>
    /// &gt;<br/>
    /// &gt; Because these balances are closing balances, we recommend you pull Account Balance no more frequently than daily. If you require a live intraday balance, this can be found for each account on the <a href="https://docs.codat.io/lending-api#/schemas/Account">Account</a> data type.<br/>
    /// &gt; <br/>
    /// &gt; Whilst you can choose to sync hourly, this may incur usage charges from Plaid or TrueLayer.
    /// </remarks>
    /// </summary>
    public class BankingAccountBalance
    {

        [JsonProperty("modifiedDate")]
        public string? ModifiedDate { get; set; }

        [JsonProperty("sourceModifiedDate")]
        public string? SourceModifiedDate { get; set; }

        /// <summary>
        /// The unique identifier of the account.
        /// </summary>
        [JsonProperty("accountId")]
        public string AccountId { get; set; } = default!;

        /// <summary>
        /// Depending on the data provided by the underlying bank, not all balances are always available.
        /// </summary>
        [JsonProperty("balance")]
        public AccountBalanceAmounts Balance { get; set; } = default!;

        /// <summary>
        /// In Codat&apos;s data model, dates and times are represented using the &lt;a class=&quot;external&quot; href=&quot;https://en.wikipedia.org/wiki/ISO_8601&quot; target=&quot;_blank&quot;&gt;ISO 8601 standard&lt;/a&gt;. Date and time fields are formatted as strings; for example:<br/>
        /// 
        /// <remarks>
        /// <br/>
        /// ```<br/>
        /// 2020-10-08T22:40:50Z<br/>
        /// 2021-01-01T00:00:00<br/>
        /// ```<br/>
        /// <br/>
        /// <br/>
        /// <br/>
        /// When syncing data that contains `DateTime` fields from Codat, make sure you support the following cases when reading time information:<br/>
        /// <br/>
        /// - Coordinated Universal Time (UTC): `2021-11-15T06:00:00Z`<br/>
        /// - Unqualified local time: `2021-11-15T01:00:00`<br/>
        /// - UTC time offsets: `2021-11-15T01:00:00-05:00`<br/>
        /// <br/>
        /// &gt; Time zones<br/>
        /// &gt; <br/>
        /// &gt; Not all dates from Codat will contain information about time zones.  <br/>
        /// &gt; Where it is not available from the underlying platform, Codat will return these as times local to the business whose data has been synced.
        /// </remarks>
        /// </summary>
        [JsonProperty("date")]
        public string Date { get; set; } = default!;
    }
}