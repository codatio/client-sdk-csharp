//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace Codat.Lending.Models.Components
{
    using Codat.Lending.Models.Components;
    using Codat.Lending.Utils;
    using Newtonsoft.Json;
    
    /// <summary>
    /// The target bank account in a supported accounting software for ingestion into a bank feed.
    /// </summary>
    public class SourceAccountV2
    {

        /// <summary>
        /// Unique ID for the bank account.
        /// </summary>
        [JsonProperty("id")]
        public string Id { get; set; } = default!;

        /// <summary>
        /// The bank account name.
        /// </summary>
        [JsonProperty("accountName")]
        public string AccountName { get; set; } = default!;

        /// <summary>
        /// The type of bank account e.g. checking, savings, loan, creditCard, prepaidCard.
        /// </summary>
        [JsonProperty("accountType")]
        public SourceAccountV2AccountType AccountType { get; set; } = default!;

        /// <summary>
        /// The account number.
        /// </summary>
        [JsonProperty("accountNumber")]
        public string AccountNumber { get; set; } = default!;

        /// <summary>
        /// The sort code.
        /// </summary>
        [JsonProperty("sortCode")]
        public string? SortCode { get; set; } = null;

        /// <summary>
        /// Routing information for the bank. This does not include account number.
        /// </summary>
        [JsonProperty("routingInfo")]
        public RoutingInfo? RoutingInfo { get; set; }

        /// <summary>
        /// The currency data type in Codat is the <a href="https://en.wikipedia.org/wiki/ISO_4217">ISO 4217</a> currency code, e.g. _GBP_.<br/>
        /// 
        /// <remarks>
        /// <br/>
        /// ## Unknown currencies<br/>
        /// <br/>
        /// In line with the ISO 4217 specification, the code _XXX_ is used when the data source does not return a currency for a transaction. <br/>
        /// <br/>
        /// There are only a very small number of edge cases where this currency code is returned by the Codat system.
        /// </remarks>
        /// </summary>
        [JsonProperty("currency")]
        public string Currency { get; set; } = default!;

        /// <summary>
        /// The latest balance for the bank account.
        /// </summary>
        [JsonProperty("balance")]
        public decimal Balance { get; set; } = default!;

        [JsonProperty("accountInfo")]
        public AccountInfo? AccountInfo { get; set; } = null;

        /// <summary>
        /// In Codat&apos;s data model, dates and times are represented using the &lt;a class=&quot;external&quot; href=&quot;https://en.wikipedia.org/wiki/ISO_8601&quot; target=&quot;_blank&quot;&gt;ISO 8601 standard&lt;/a&gt;. Date and time fields are formatted as strings; for example:<br/>
        /// 
        /// <remarks>
        /// <br/>
        /// ```<br/>
        /// 2020-10-08T22:40:50Z<br/>
        /// 2021-01-01T00:00:00<br/>
        /// ```<br/>
        /// <br/>
        /// <br/>
        /// <br/>
        /// When syncing data that contains `DateTime` fields from Codat, make sure you support the following cases when reading time information:<br/>
        /// <br/>
        /// - Coordinated Universal Time (UTC): `2021-11-15T06:00:00Z`<br/>
        /// - Unqualified local time: `2021-11-15T01:00:00`<br/>
        /// - UTC time offsets: `2021-11-15T01:00:00-05:00`<br/>
        /// <br/>
        /// &gt; Time zones<br/>
        /// &gt; <br/>
        /// &gt; Not all dates from Codat will contain information about time zones.  <br/>
        /// &gt; Where it is not available from the underlying platform, Codat will return these as times local to the business whose data has been synced.
        /// </remarks>
        /// </summary>
        [JsonProperty("modifiedDate")]
        public string? ModifiedDate { get; set; }

        /// <summary>
        /// Status of the source account.
        /// </summary>
        [JsonProperty("status")]
        public SourceAccountV2Status? Status { get; set; } = null;

        /// <summary>
        /// In Codat&apos;s data model, dates are represented using the &lt;a class=&quot;external&quot; href=&quot;https://en.wikipedia.org/wiki/ISO_8601&quot; target=&quot;_blank&quot;&gt;ISO 8601 standard&lt;/a&gt;. Date fields are formatted as strings; for example:<br/>
        /// 
        /// <remarks>
        /// ```<br/>
        /// 2020-10-08<br/>
        /// ```
        /// </remarks>
        /// </summary>
        [JsonProperty("feedStartDate")]
        public string? FeedStartDate { get; set; } = null;
    }
}