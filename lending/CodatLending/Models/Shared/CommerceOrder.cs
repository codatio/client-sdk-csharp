
//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace CodatLending.Models.Shared
{
    using Newtonsoft.Json;
    using System.Collections.Generic;
    
    
    /// <summary>
    /// Orders contain the transaction details for all products sold by the company, and include details of any payments, service charges, or refunds related to each order. You can use data from the Orders endpoints to calculate key metrics, such as gross sales values and monthly recurring revenue (MRR).
    /// 
    /// <remarks>
    /// 
    /// Explore our [data coverage](https://knowledge.codat.io/supported-features/commerce?view=tab-by-data-type&dataType=commerce-orders) for this data type.
    /// 
    /// </remarks>
    /// </summary>
    public class CommerceOrder
    {
        /// <summary>
        /// In Codat's data model, dates and times are represented using the <a class="external" href="https://en.wikipedia.org/wiki/ISO_8601" target="_blank">ISO 8601 standard</a>. Date and time fields are formatted as strings; for example:
        /// 
        /// <remarks>
        /// 
        /// ```
        /// 2020-10-08T22:40:50Z
        /// 2021-01-01T00:00:00
        /// ```
        /// 
        /// 
        /// 
        /// When syncing data that contains `DateTime` fields from Codat, make sure you support the following cases when reading time information:
        /// 
        /// - Coordinated Universal Time (UTC): `2021-11-15T06:00:00Z`
        /// - Unqualified local time: `2021-11-15T01:00:00`
        /// - UTC time offsets: `2021-11-15T01:00:00-05:00`
        /// 
        /// > Time zones
        /// > 
        /// > Not all dates from Codat will contain information about time zones.  
        /// > Where it is not available from the underlying platform, Codat will return these as times local to the business whose data has been synced.
        /// </remarks>
        /// </summary>
        [JsonProperty("closedDate")]
        public string? ClosedDate { get; set; }
        
        /// <summary>
        /// The Codat country property is returned as it was provided in the underlying platform by the company without any formatting on our part.
        /// 
        /// <remarks>
        /// 
        /// Depending on the platform the value of this property will either be an <a href="https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes" target="_blank">ISO 3166</a> code (2-alpha or 3-alpha) or free-form text returned as a string name in our model. 
        /// 
        /// For POST operations against platforms that demand a specific format for the country code, we have documented accepted values in the [options](https://docs.codat.io/lending-api#/operations/get-companies-companyId-connections-connectionId-push) endpoint.
        /// </remarks>
        /// </summary>
        [JsonProperty("country")]
        public string? Country { get; set; }
        
        /// <summary>
        /// In Codat's data model, dates and times are represented using the <a class="external" href="https://en.wikipedia.org/wiki/ISO_8601" target="_blank">ISO 8601 standard</a>. Date and time fields are formatted as strings; for example:
        /// 
        /// <remarks>
        /// 
        /// ```
        /// 2020-10-08T22:40:50Z
        /// 2021-01-01T00:00:00
        /// ```
        /// 
        /// 
        /// 
        /// When syncing data that contains `DateTime` fields from Codat, make sure you support the following cases when reading time information:
        /// 
        /// - Coordinated Universal Time (UTC): `2021-11-15T06:00:00Z`
        /// - Unqualified local time: `2021-11-15T01:00:00`
        /// - UTC time offsets: `2021-11-15T01:00:00-05:00`
        /// 
        /// > Time zones
        /// > 
        /// > Not all dates from Codat will contain information about time zones.  
        /// > Where it is not available from the underlying platform, Codat will return these as times local to the business whose data has been synced.
        /// </remarks>
        /// </summary>
        [JsonProperty("createdDate")]
        public string? CreatedDate { get; set; }
        
        [JsonProperty("currency")]
        public string? Currency { get; set; }
        
        /// <summary>
        /// Reference to the customer that placed the order.
        /// </summary>
        [JsonProperty("customerRef")]
        public CommerceCustomerRef? CustomerRef { get; set; }
        
        /// <summary>
        /// A unique, persistent identifier for this record
        /// </summary>
        [JsonProperty("id")]
        public string Id { get; set; }
        
        /// <summary>
        /// Reference to the geographic location where the order was placed.
        /// </summary>
        [JsonProperty("locationRef")]
        public LocationRef? LocationRef { get; set; }
        
        [JsonProperty("modifiedDate")]
        public string? ModifiedDate { get; set; }
        
        [JsonProperty("orderLineItems")]
        public List<OrderLineItem>? OrderLineItems { get; set; }
        
        /// <summary>
        /// Friendly reference for the order in the commerce or point of sale platform.
        /// </summary>
        [JsonProperty("orderNumber")]
        public string? OrderNumber { get; set; }
        
        [JsonProperty("payments")]
        public List<PaymentRef>? Payments { get; set; }
        
        [JsonProperty("serviceCharges")]
        public List<ServiceCharge>? ServiceCharges { get; set; }
        
        [JsonProperty("sourceModifiedDate")]
        public string? SourceModifiedDate { get; set; }
        
        /// <summary>
        /// Supplemental data is additional data you can include in our standard data types. 
        /// 
        /// <remarks>
        /// 
        /// It is referenced as a configured dynamic key value pair that is unique to the accounting platform. [Learn more](https://docs.codat.io/using-the-api/additional-data) about supplemental data.
        /// </remarks>
        /// </summary>
        [JsonProperty("supplementalData")]
        public CommerceOrderSupplementalData? SupplementalData { get; set; }
        
        /// <summary>
        /// Total amount of the order, including tax, net of any discounts and refunds.
        /// </summary>
        [JsonProperty("totalAmount")]
        public float? TotalAmount { get; set; }
        
        /// <summary>
        /// Total amount of discount applied to the order.
        /// </summary>
        [JsonProperty("totalDiscount")]
        public float? TotalDiscount { get; set; }
        
        /// <summary>
        /// Extra amount added to a bill.
        /// </summary>
        [JsonProperty("totalGratuity")]
        public float? TotalGratuity { get; set; }
        
        /// <summary>
        /// Total amount refunded issued by a merchant on an order (always a negative value).
        /// </summary>
        [JsonProperty("totalRefund")]
        public float? TotalRefund { get; set; }
        
        /// <summary>
        /// Total amount of tax applied to the order.
        /// </summary>
        [JsonProperty("totalTaxAmount")]
        public float? TotalTaxAmount { get; set; }
        
    }
    
}