
//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace CodatLending.Models.Shared
{
    using Newtonsoft.Json;
    
    
    public class DataIntegrityByAmount
    {
        /// <summary>
        /// The currency data type in Codat is the [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code, e.g. _GBP_.
        /// 
        /// <remarks>
        /// 
        /// ## Unknown currencies
        /// 
        /// In line with the ISO 4217 specification, the code _XXX_ is used when the data source does not return a currency for a transaction. 
        /// 
        /// There are only a very small number of edge cases where this currency code is returned by the Codat system.
        /// </remarks>
        /// </summary>
        [JsonProperty("currency")]
        public string? Currency { get; set; }
        
        /// <summary>
        /// The percentage of the absolute value of transactions of the type specified in the route which have a match.
        /// </summary>
        [JsonProperty("matchPercentage")]
        public float? MatchPercentage { get; set; }
        
        /// <summary>
        /// The sum of the absolute value of transactions of the type specified in the route which have a match.
        /// </summary>
        [JsonProperty("matched")]
        public float? Matched { get; set; }
        
        /// <summary>
        /// The total of unmatched and matched.
        /// </summary>
        [JsonProperty("total")]
        public float? Total { get; set; }
        
        /// <summary>
        /// The sum of the absolute value of transactions of the type specified in the route which don't have a match.
        /// </summary>
        [JsonProperty("unmatched")]
        public float? Unmatched { get; set; }
        
    }
    
}