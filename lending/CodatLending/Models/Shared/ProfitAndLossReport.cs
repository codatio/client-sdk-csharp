
//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace CodatLending.Models.Shared
{
    using Newtonsoft.Json;
    
    
    public class ProfitAndLossReport
    {
        [JsonProperty("costOfSales")]
        public ReportLine? CostOfSales { get; set; }
        
        [JsonProperty("expenses")]
        public ReportLine? Expenses { get; set; }
        
        /// <summary>
        /// In Codat's data model, dates and times are represented using the <a class="external" href="https://en.wikipedia.org/wiki/ISO_8601" target="_blank">ISO 8601 standard</a>. Date and time fields are formatted as strings; for example:
        /// 
        /// <remarks>
        /// 
        /// ```
        /// 2020-10-08T22:40:50Z
        /// 2021-01-01T00:00:00
        /// ```
        /// 
        /// 
        /// 
        /// When syncing data that contains `DateTime` fields from Codat, make sure you support the following cases when reading time information:
        /// 
        /// - Coordinated Universal Time (UTC): `2021-11-15T06:00:00Z`
        /// - Unqualified local time: `2021-11-15T01:00:00`
        /// - UTC time offsets: `2021-11-15T01:00:00-05:00`
        /// 
        /// > Time zones
        /// > 
        /// > Not all dates from Codat will contain information about time zones.  
        /// > Where it is not available from the underlying platform, Codat will return these as times local to the business whose data has been synced.
        /// </remarks>
        /// </summary>
        [JsonProperty("fromDate")]
        public string? FromDate { get; set; }
        
        /// <summary>
        /// Gross profit of the company in the given date range.
        /// </summary>
        [JsonProperty("grossProfit")]
        public decimal GrossProfit { get; set; } = default!;
        
        [JsonProperty("income")]
        public ReportLine? Income { get; set; }
        
        /// <summary>
        /// Net operating profit of the company in the given date range.
        /// </summary>
        [JsonProperty("netOperatingProfit")]
        public decimal NetOperatingProfit { get; set; } = default!;
        
        /// <summary>
        /// Net other income of the company in the given date range.
        /// </summary>
        [JsonProperty("netOtherIncome")]
        public decimal NetOtherIncome { get; set; } = default!;
        
        /// <summary>
        /// Net profit of the company in the given date range.
        /// </summary>
        [JsonProperty("netProfit")]
        public decimal NetProfit { get; set; } = default!;
        
        [JsonProperty("otherExpenses")]
        public ReportLine? OtherExpenses { get; set; }
        
        [JsonProperty("otherIncome")]
        public ReportLine? OtherIncome { get; set; }
        
        /// <summary>
        /// In Codat's data model, dates and times are represented using the <a class="external" href="https://en.wikipedia.org/wiki/ISO_8601" target="_blank">ISO 8601 standard</a>. Date and time fields are formatted as strings; for example:
        /// 
        /// <remarks>
        /// 
        /// ```
        /// 2020-10-08T22:40:50Z
        /// 2021-01-01T00:00:00
        /// ```
        /// 
        /// 
        /// 
        /// When syncing data that contains `DateTime` fields from Codat, make sure you support the following cases when reading time information:
        /// 
        /// - Coordinated Universal Time (UTC): `2021-11-15T06:00:00Z`
        /// - Unqualified local time: `2021-11-15T01:00:00`
        /// - UTC time offsets: `2021-11-15T01:00:00-05:00`
        /// 
        /// > Time zones
        /// > 
        /// > Not all dates from Codat will contain information about time zones.  
        /// > Where it is not available from the underlying platform, Codat will return these as times local to the business whose data has been synced.
        /// </remarks>
        /// </summary>
        [JsonProperty("toDate")]
        public string? ToDate { get; set; }
        
    }
    
}