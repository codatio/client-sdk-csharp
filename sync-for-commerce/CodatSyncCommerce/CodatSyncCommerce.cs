
//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace Codat.Sync.Commerce
{
    using Codat.Sync.Commerce.Models.Shared;
    using Codat.Sync.Commerce.Utils;
    using System.Collections.Generic;
    using System.Net.Http;
    using System.Threading.Tasks;
    using System;

    /// <summary>
    /// Sync for Commerce: The API for Sync for Commerce. <br/>
    /// 
    /// <remarks>
    /// <br/>
    /// Sync for Commerce automatically replicates and reconciles sales data from a merchant’s source PoS, Payments, and eCommerce systems into their accounting software. This eliminates manual processing by merchants and transforms their ability to run and grow their business.<br/>
    ///   <br/>
    /// <a href="https://docs.codat.io/commerce/overview">Read More...</a><br/>
    /// <br/>
    /// Not seeing the endpoints you&apos;re expecting? We&apos;ve <a href="https://docs.codat.io/updates/230901-new-products">reorganized our products</a>, and you may be using a <a href="https://docs.codat.io/sync-for-commerce-v1-api#/">different version of Sync for Commerce</a>.
    /// </remarks>
    /// </summary>
    public interface ICodatSyncCommerce
    {

        /// <summary>
        /// Configure preferences for any given Sync for Commerce company using sync flow.
        /// </summary>
        public ISyncFlowSettings SyncFlowSettings { get; }

        /// <summary>
        /// Advanced company management and sync preferences.
        /// </summary>
        public IAdvancedControls AdvancedControls { get; }

        /// <summary>
        /// Create new and manage existing Sync for Commerce connections using the Sync flow UI.
        /// </summary>
        public IConnections Connections { get; }

        /// <summary>
        /// Initiate and monitor the sync of company data into accounting software.
        /// </summary>
        public ISync Sync { get; }

        /// <summary>
        /// View useful information about codat&apos;s integrations.
        /// </summary>
        public IIntegrations Integrations { get; }
    }
    
    public class SDKConfig
    {
    }

    /// <summary>
    /// Sync for Commerce: The API for Sync for Commerce. <br/>
    /// 
    /// <remarks>
    /// <br/>
    /// Sync for Commerce automatically replicates and reconciles sales data from a merchant’s source PoS, Payments, and eCommerce systems into their accounting software. This eliminates manual processing by merchants and transforms their ability to run and grow their business.<br/>
    ///   <br/>
    /// <a href="https://docs.codat.io/commerce/overview">Read More...</a><br/>
    /// <br/>
    /// Not seeing the endpoints you&apos;re expecting? We&apos;ve <a href="https://docs.codat.io/updates/230901-new-products">reorganized our products</a>, and you may be using a <a href="https://docs.codat.io/sync-for-commerce-v1-api#/">different version of Sync for Commerce</a>.
    /// </remarks>
    /// </summary>
    public class CodatSyncCommerce: ICodatSyncCommerce
    {
        public SDKConfig Config { get; private set; }
        public static List<string> ServerList = new List<string>()
        {
            "https://api.codat.io",
        };

        private const string _language = "csharp";
        private const string _sdkVersion = "3.0.0";
        private const string _sdkGenVersion = "2.188.1";
        private const string _openapiDocVersion = "1.1";
        private const string _userAgent = "speakeasy-sdk/csharp 3.0.0 2.188.1 1.1 Codat.Sync.Commerce";
        private string _serverUrl = "";
        private ISpeakeasyHttpClient _defaultClient;
        private ISpeakeasyHttpClient _securityClient;
        public ISyncFlowSettings SyncFlowSettings { get; private set; }
        public IAdvancedControls AdvancedControls { get; private set; }
        public IConnections Connections { get; private set; }
        public ISync Sync { get; private set; }
        public IIntegrations Integrations { get; private set; }

        public CodatSyncCommerce(Security? security = null, string? serverUrl = null, ISpeakeasyHttpClient? client = null)
        {
            _serverUrl = serverUrl ?? CodatSyncCommerce.ServerList[0];

            _defaultClient = new SpeakeasyHttpClient(client);
            _securityClient = _defaultClient;
            
            if(security != null)
            {
                _securityClient = SecuritySerializer.Apply(_defaultClient, security);
            }
            
            Config = new SDKConfig()
            {
            };

            SyncFlowSettings = new SyncFlowSettings(_defaultClient, _securityClient, _serverUrl, Config);
            AdvancedControls = new AdvancedControls(_defaultClient, _securityClient, _serverUrl, Config);
            Connections = new Connections(_defaultClient, _securityClient, _serverUrl, Config);
            Sync = new Sync(_defaultClient, _securityClient, _serverUrl, Config);
            Integrations = new Integrations(_defaultClient, _securityClient, _serverUrl, Config);
        }
    }
}