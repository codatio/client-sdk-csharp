//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace Openapi.Models.Components
{
    using Newtonsoft.Json;
    using Openapi.Models.Components;
    using Openapi.Utils;
    
    public class BankAccount
    {

        /// <summary>
        /// Identifier for the bank account, unique for the company in the accounting software.
        /// </summary>
        [JsonProperty("id")]
        public string? Id { get; set; }

        /// <summary>
        /// Code used to identify each nominal account for a business.
        /// </summary>
        [JsonProperty("nominalCode")]
        public string? NominalCode { get; set; } = null;

        /// <summary>
        /// Name of the bank account in the accounting software.
        /// </summary>
        [JsonProperty("name")]
        public string? Name { get; set; } = null;

        /// <summary>
        /// The type of transactions and balances on the account.  <br/>
        /// 
        /// <remarks>
        /// For Credit accounts, positive balances are liabilities, and positive transactions **reduce** liabilities.  <br/>
        /// For Debit accounts, positive balances are assets, and positive transactions **increase** assets.
        /// </remarks>
        /// </summary>
        [JsonProperty("accountType")]
        public BankAccountType? AccountType { get; set; }

        /// <summary>
        /// Account number for the bank account.<br/>
        /// 
        /// <remarks>
        /// <br/>
        /// Xero integrations<br/>
        /// Only a UK account number shows for bank accounts with GBP currency and a combined total of sort code and account number that equals 14 digits, For non-GBP accounts, the full bank account number is populated.
        /// </remarks>
        /// </summary>
        [JsonProperty("accountNumber")]
        public string? AccountNumber { get; set; } = null;

        /// <summary>
        /// Sort code for the bank account. This is relevant to UK bank accounts.<br/>
        /// 
        /// <remarks>
        /// <br/>
        /// Xero integrations<br/>
        /// The sort code is only displayed when the currency = GBP and the sort code and account number sum to 14 digits. For non-GBP accounts, this field is not populated.
        /// </remarks>
        /// </summary>
        [JsonProperty("sortCode")]
        public string? SortCode { get; set; } = null;

        /// <summary>
        /// The currency data type in Codat is the <a href="https://en.wikipedia.org/wiki/ISO_4217">ISO 4217</a> currency code, e.g. _GBP_.<br/>
        /// 
        /// <remarks>
        /// <br/>
        /// ## Unknown currencies<br/>
        /// <br/>
        /// In line with the ISO 4217 specification, the code _XXX_ is used when the data source does not return a currency for a transaction. <br/>
        /// <br/>
        /// There are only a very small number of edge cases where this currency code is returned by the Codat system.
        /// </remarks>
        /// </summary>
        [JsonProperty("currency")]
        public string? Currency { get; set; }

        /// <summary>
        /// The current status of the bank account.
        /// </summary>
        [JsonProperty("status")]
        public BankAccountStatus? Status { get; set; }

        [JsonProperty("sourceModifiedDate")]
        public string? SourceModifiedDate { get; set; }
    }
}